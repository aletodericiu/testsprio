Index: src/app/components/dashboard/dashboard.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"page-header\" style=\"background-image: url('../assets/img/435296.jpg');\">\n    <div class=\"filter\"></div>\n    <div class=\"container\">\n        <div class=\"motto text-center\">\n\n            <div *ngIf=\"!selectedMetric\">\n                <h3>Please select the metric: </h3>\n                <br>\n\n                <div class=\"[ form-group ]\">\n                    <input type=\"checkbox\" name=\"fancy-checkbox-default\" id=\"fancy-checkbox-default-apbc\" autocomplete=\"off\"\n                           [(ngModel)]=\"selectedMetric\" (ngModelChange)=\"onChange1($event, 'apbc')\"/>\n                    <div class=\"[ btn-group ]\">\n                        <label for=\"fancy-checkbox-default-apbc\" class=\"[ btn btn-default ]\">\n                            <span class=\"[ glyphicon glyphicon-ok ]\"></span>\n                            <span> </span>\n                        </label>\n                        <label for=\"fancy-checkbox-default-apbc\" class=\"[ btn btn-default active ]\">\n                            APBC - Average Percentage Branch Coverage\n                        </label>\n                    </div>\n                </div>\n\n                <div class=\"[ form-group ]\">\n                    <input type=\"checkbox\" name=\"fancy-checkbox-default\" id=\"fancy-checkbox-default-apfd\" autocomplete=\"off\"\n                           [(ngModel)]=\"selectedMetric\" (ngModelChange)=\"onChange1($event, 'apfd')\"/>\n                    <div class=\"[ btn-group ]\">\n                        <label for=\"fancy-checkbox-default-apfd\" class=\"[ btn btn-default ]\">\n                            <span class=\"[ glyphicon glyphicon-ok ]\"></span>\n                            <span> </span>\n                        </label>\n                        <label for=\"fancy-checkbox-default-apfd\" class=\"[ btn btn-default active ]\">\n                            APFD - Average Percentage Faults Detection\n                        </label>\n                    </div>\n                </div>\n\n                <div class=\"[ form-group ]\">\n                    <input type=\"checkbox\" name=\"fancy-checkbox-default\" id=\"fancy-checkbox-default-apsc\" autocomplete=\"off\"\n                           [(ngModel)]=\"selectedMetric\" (ngModelChange)=\"onChange1($event, 'apsc')\"/>\n                    <div class=\"[ btn-group ]\">\n                        <label for=\"fancy-checkbox-default-apsc\" class=\"[ btn btn-default ]\">\n                            <span class=\"[ glyphicon glyphicon-ok ]\"></span>\n                            <span> </span>\n                        </label>\n                        <label for=\"fancy-checkbox-default-apsc\" class=\"[ btn btn-default active ]\">\n                            APSC - Average Percentage Statement Coverage\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"selectedMetric\">\n                <h3 *ngIf=\"!fileUploaded\">Please select and upload the data file!</h3>\n                <br />\n                <app-file-upload (fileUploaded)=\"setFileUploaded($event)\"></app-file-upload>\n            </div>\n\n            <div class=\"btn btn-outline-neutral\" *ngIf=\"selectedMetric\" (click)=\"selectedMetric = null; fileUploaded = null\" id=\"back-button\">\n                Back\n            </div>\n\n            <br/>\n            <div *ngIf=\"fileUploaded\" class=\"buttons\">\n            <!--<div class=\"buttons\" (click)=\"onButtonGroupClick($event)\">-->\n                <button [class.active]=\"showFullMatrixContentTab\" (click)=\"getFaultMatrix()\">Fault matrix details</button>\n                <button [class.active]=\"showBestIndividualContentTab\" (click)=\"getBestIndividual()\">Best solution</button>\n                <button [class.active]=\"showBestThreeIndividualsContentTab\" (click)=\"getBestThreeIndividuals()\">Top three solutions</button>\n                <button [class.active]=\"showAPFDForInputVectorContentTab\" (click)=\"initAPFDForInputVectorTab()\"  *ngIf=\"selectedMetric == 'apfd'\">Calculate APFD for your prioritization</button>\n                <button [class.active]=\"showAPFDForInputVectorContentTab\" (click)=\"initAPFDForInputVectorTab()\"  *ngIf=\"selectedMetric == 'apsc'\">Calculate APSC for your prioritization</button>\n                <button [class.active]=\"showAPFDForInputVectorContentTab\" (click)=\"initAPFDForInputVectorTab()\"  *ngIf=\"selectedMetric == 'apbc'\">Calculate APBC for your prioritization</button>\n            </div>\n\n\n            <div *ngIf=\"fileUploaded\">\n                <div [hidden]=\"!showFullMatrixContentTab\" class=\"content\">\n                    <div>\n                        <div> <span> Total number of tests: </span> {{faultMatrix.numberOfTests}} </div>\n                        <div> <span> Total number of faults: </span> {{faultMatrix.numberOfFaults}} </div>\n                        <div> <span> Fault matrix: </span> </div>\n                        <div>\n                            <table>\n                                <tr *ngFor = \"let item of faultMatrix.data\">\n                                    <td *ngFor = \"let subitem of item\"> {{ subitem}} </td>\n                                </tr>\n                            </table>\n                        </div>\n\n                    </div>\n                </div>\n                <div [hidden]=\"!showBestIndividualContentTab\" class=\"content\">\n                    <div>\n                        <span class=\"bold\" *ngIf=\"selectedMetric == 'apfd'\"> APFD: </span>\n                        <span class=\"bold\" *ngIf=\"selectedMetric == 'apsc'\"> APSC: </span>\n                        <span class=\"bold\" *ngIf=\"selectedMetric == 'apbc'\"> APBC: </span>\n                        {{bestIndividual.fitness}}\n                        <br>\n                        <br>\n                        <span class=\"bold\"> The solution vector: </span>\n                        <span *ngFor=\"let data of bestIndividual.genes\">\n                    {{data}}\n                    </span>\n                    </div>\n                    <div>\n                        <canvas #canvas id=\"canvas0\">{{ bestIndividual.chart }}</canvas>\n                    </div>\n                </div>\n                <div [hidden]=\"!showBestThreeIndividualsContentTab\" class=\"content\">\n                    <div>\n                        <div *ngFor=\"let data of bestThreeIndividuals; let i = index\">\n                            <span class=\"bold\" *ngIf=\"selectedMetric == 'apfd'\"> APFD: </span>\n                            <span class=\"bold\" *ngIf=\"selectedMetric == 'apsc'\"> APSC: </span>\n                            <span class=\"bold\" *ngIf=\"selectedMetric == 'apbc'\"> APBC: </span>\n                            {{data.fitness}}\n                            <br>\n                            <span class=\"bold\"> Solution: </span>\n                            <span *ngFor=\"let ind of data.genes\">\n                            {{ind}}\n                        </span>\n                            <br>\n                        </div>\n                    </div>\n                    <div>\n                        <canvas #canvas id=\"canvas1\"></canvas>\n                    </div>\n                    <div>\n                        <canvas #canvas id=\"canvas2\"></canvas>\n                    </div>\n                    <div>\n                        <canvas #canvas id=\"canvas3\"></canvas>\n                    </div>\n                </div>\n                <div [hidden]=\"!showAPFDForInputVectorContentTab\" class=\"content\">\n                    <div>\n                        <h5>Give the arrangements of test cases:</h5>\n                        *The numbers should be in the range: [1,{{faultMatrix.numberOfTests}}]\n                        <br>\n                        <br>\n                        <form #formRef=\"ngForm\">\n                            <input *ngFor=\"let ind of arr; let i = index\" type=\"text\" class=\"specialInput\"\n                                   name=\"name{{i}}\" [(ngModel)]=\"arri[i]\" #name=\"ngModel\" required\n                                   (ngModelChange)=\"onChange($event)\">\n                            <!--[ngClass]=\"{'error': (checkIfElementRepeatsInVector(arri[i]) || checkIfElementExceedsRange(arri[i]))}\"-->\n                        </form>\n                        <!--arri {{arri | json}}-->\n                        <br>\n                        <!--formRef {{formRef | json}}-->\n\n                        <!--<div [ngClass]=\"{'error': test3(arri[i])}\"> test </div>-->\n                        <span class=\"msg\" id=\"errMsg1\"> The value repeats. </span>\n                        <span class=\"msg\" id=\"errMsg2\"> Out of range </span>\n                        <br>\n                        <br>\n                        <button [hidden]=\"!formRef.valid\" class=\"btn btn-outline-neutral\" id=\"calculateBtn\" (click)=\"calculateAPFD()\"> Calculate AFPD </button>\n                        <br>\n                        <br>\n                        <br>\n                        <span *ngIf=\"apfdInputVector\">  <span class=\"bold\"> APFD: </span> {{apfdInputVector}}\n                    </span>\n                    </div>\n                    <div [hidden]=\"!apfdInputVector\">\n                        <canvas #canvas id=\"canvas6\"></canvas>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/components/dashboard/dashboard.component.html	(revision 5569dfb7fd81cf76b8e38f9151f5f6436c71aad3)
+++ src/app/components/dashboard/dashboard.component.html	(revision )
@@ -4,7 +4,8 @@
         <div class="motto text-center">
 
             <div *ngIf="!selectedMetric">
-                <h3>Please select the metric: </h3>
+                <h2>Please select the metric: </h2>
+                <br>
                 <br>
 
                 <div class="[ form-group ]">
@@ -16,7 +17,7 @@
                             <span> </span>
                         </label>
                         <label for="fancy-checkbox-default-apbc" class="[ btn btn-default active ]">
-                            APBC - Average Percentage Branch Coverage
+                            <h5>APBC - Average Percentage Branch Coverage</h5>
                         </label>
                     </div>
                 </div>
@@ -30,7 +31,7 @@
                             <span> </span>
                         </label>
                         <label for="fancy-checkbox-default-apfd" class="[ btn btn-default active ]">
-                            APFD - Average Percentage Faults Detection
+                            <h5>APFD - Average Percentage Faults Detection</h5>
                         </label>
                     </div>
                 </div>
@@ -44,14 +45,14 @@
                             <span> </span>
                         </label>
                         <label for="fancy-checkbox-default-apsc" class="[ btn btn-default active ]">
-                            APSC - Average Percentage Statement Coverage
+                            <h5>APSC - Average Percentage Statement Coverage</h5>
                         </label>
                     </div>
                 </div>
             </div>
 
             <div *ngIf="selectedMetric">
-                <h3 *ngIf="!fileUploaded">Please select and upload the data file!</h3>
+                <h2 *ngIf="!fileUploaded">Please select and upload the data file!</h2>
                 <br />
                 <app-file-upload (fileUploaded)="setFileUploaded($event)"></app-file-upload>
             </div>
Index: src/app/components/dashboard/dashboard.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>canvas {\n  background: floralwhite !important;\n  height: 300px !important;\n  width: 100% !important;\n  padding: 20px;\n  opacity: 0.6;\n  border-radius: 5px;\n}\n\n.specialInput {\n  background: transparent;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-color: white;\n  width: 36px;\n  border-width: 1px;\n  color: white;\n  text-align: center;\n  margin-left: 3px;\n  margin-right: 3px;\n}\n\n.error {\n  color: red;\n}\n\n.msg {\n  display: none;\n\n  &.error {\n    display: block;\n    color: red;\n  }\n}\n\n.specialInput:focus {\n  outline:none;\n}\n\n.content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  min-height: 340px;\n\n  > div {\n    //transition: all .9s;\n\n    &:first-child {\n      border-radius: 5px;\n      width: auto;\n      min-width: 47%;\n\n      >div {\n        padding-top: 5px;\n        padding-bottom: 5px;\n\n        span:nth-child(1), span:nth-child(3) {\n          font-weight: bold;\n        };\n      }\n\n      table {\n        margin: 0 auto;\n      }\n    }\n\n    width: 47%;\n    background: rgba(100,91,87,0.7);\n    margin: 40px auto;\n  }\n}\n\n.buttons {\n\n  border-bottom: 1px solid floralwhite;\n  display: flex;\n  justify-content: space-between;\n\n  button {\n    height: 50px;\n    background: transparent;\n    border: none;\n    color: #fff;\n    outline: none;\n    cursor: pointer;\n    width: auto;\n\n    &:hover {\n      color: white;\n      font-weight: bolder;\n\n    }\n\n    &.active {\n      font-weight: bold;\n      color: white;\n    }\n  }\n}\n\n.bold{\n  font-weight: bold;\n}\n\n.form-group input[type=\"checkbox\"] {\n  display: none;\n}\n\n.form-group input[type=\"checkbox\"] + .btn-group > label span {\n  width: 20px;\n}\n\n.form-group input[type=\"checkbox\"] + .btn-group > label span:first-child {\n  display: none;\n}\n.form-group input[type=\"checkbox\"] + .btn-group > label span:last-child {\n  display: inline-block;\n}\n\n.form-group input[type=\"checkbox\"]:checked + .btn-group > label span:first-child {\n  display: inline-block;\n}\n.form-group input[type=\"checkbox\"]:checked + .btn-group > label span:last-child {\n  display: none;\n}\n\n#back-button {\n  position: fixed;\n  top: 10px;\n  left: 10px;\n}\n\n.btn-group{\n  width: 390px;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/components/dashboard/dashboard.component.scss	(revision 5569dfb7fd81cf76b8e38f9151f5f6436c71aad3)
+++ src/app/components/dashboard/dashboard.component.scss	(revision )
@@ -133,5 +133,8 @@
 }
 
 .btn-group{
-  width: 390px;
+  .btn:last-child{
+    width: 500px;
+    text-align: left;
+  }
 }
\ No newline at end of file
